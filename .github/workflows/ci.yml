name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Set up test environment
      run: |
        export JWT_SECRET=test-jwt-secret
        export SESSION_SECRET=test-session-secret
        export GOOGLE_CLIENT_ID=test-google-client-id
        export GOOGLE_CLIENT_SECRET=test-google-client-secret
        export GITHUB_ID=test-github-id
        export GITHUB_SECRET=test-github-secret
        export BASE_URL=http://localhost:8085
        export CLIENT_BASE_URL=http://localhost:3000
        export ROBOHASH=https://robohash.org/
        export PUSHER_APP_ID=test-pusher-app-id
        export PUSHER_KEY=test-pusher-key
        export PUSHER_SECRET=test-pusher-secret
        export PUSHER_CLUSTER=test-cluster

    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

    - name: Run tests
      run: go test -v -coverprofile=coverage.out ./...

    - name: Run race condition tests
      run: go test -race ./...

    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

    - name: Run benchmarks
      run: go test -bench=. -benchmem ./...

    - name: Build application
      run: go build -o ./tmp/main ./cmd/main.go

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: lite-chat-go:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm lite-chat-go:latest --help || true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-fmt sarif -out gosec.sarif ./...'

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: gosec.sarif